<!DOCTYPE webpage SYSTEM "http://docbook.sourceforge.net/release/website/current/schema/dtd/website.dtd">
<webpage id="usage">
<head>
<title>Usage Examples</title>
<!-- <summary>What's a summary?</summary> -->
</head>

<!-- <webtoc/> -->

<section>
    <title>Sample Test Suite</title>
    <para>We'll assume we have the following file, named <filename>suite.py</filename></para>
    <programlisting role="python">
# suite.py
import unittest
class MyTestCase(unittest.TestCase):
  def setUp(self):   # ...
  def testFoo(self): # ...
  def testBar(self): # ...
  def testBaz(self): # ...

if __name__ == "__main__":
  unittest.main()</programlisting>
</section>

<section>
    <title>Using the Command Line</title>
    <para>Run your test suites with '-h' to get usage information. Currently the output is:</para>
    <programlisting role="text">
Usage
=====
  suite.py [options] [test1 [test2 [...]]]

examples:
  testoob                          - run default set of tests
  testoob MyTestSuite              - run suite 'MyTestSuite'
  testoob MyTestCase.testSomething - run MyTestCase.testSomething
  testoob MyTestCase               - run all test methods in MyTestCase

options
=======
--help, -h           show this help message and exit
--quiet, -q          Minimal output
--verbose, -v        Verbose output
--regex=REGEX        Filtering regular expression
--xml=FILE           output results in XML
--html=FILE          output results in HTML
--color              Color output
--interval=INTERVAL  Add interval between tests
--debug              Run pdb on tests that fail on Error</programlisting>
</section>

<section>
    <title>Replacing <computeroutput>unittest.main()</computeroutput></title>
    <para>Change the end of <filename>suite.py</filename> from:</para>
    <programlisting role="python">
if __name__ == "__main__":
  unittest.main()
    </programlisting>
    <para>To:</para>
    <programlisting role="python">
if __name__ == "__main__":
  import testoob
  testoob.main()
    </programlisting>
</section>

<section>
    <title>Running Tests</title>
    <para>Just run the suite:</para>
    <programlisting role="commandline">
prompt> python suite.py
...
----------------------------------------------------------------------
Ran 3 tests in 0.001s
OK
prompt></programlisting>
</section>

<section>
    <title>Output Options</title>
    <variablelist>

        <varlistentry>
            <term>Verbose</term>
            <listitem>
                <programlisting role="commandline">
prompt> python suite.py -v
testBar (__main__.MyTestCase) ... ok
testBaz (__main__.MyTestCase) ... ok
testFoo (__main__.MyTestCase) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.006s
OK
prompt></programlisting>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>Quiet</term>
            <listitem>
                <programlisting role="commandline">
prompt> python suite.py -q
----------------------------------------------------------------------
Ran 3 tests in 0.001s
OK
prompt>
                </programlisting>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>Color</term>
            <listitem>
                <para>'--color' command line option, uses ANSI escape sequences.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>HTML</term>
            <listitem>
                <para>'--html=FILENAME' command line option, writes HTML output to the file.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>XML</term>
            <listitem>
                <para>'--xml=FILENAME' command line option, writes XML output to the file. The XML structure resembles Ant's JUnit-task XML formatter's output.</para>
            </listitem>
        </varlistentry>
    </variablelist>
</section>

<section>
    <title>Filtering Options</title>
    <variablelist>
        <varlistentry>
            <term>Regular Expressions</term>
            <listitem>
                <para>'--regex=REGEX' command line option, matches test names to a Perl-style regular expression.</para>
                <programlisting role="commandline">
prompt> python suite.py -v --regex=Ba
testBar (__main__.MyTestCase) ... ok
testBaz (__main__.MyTestCase) ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.002s
OK
prompt>
                </programlisting>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>Specific Tests</term>
            <listitem>
                <programlisting role="commandline">
prompt> python suite.py -v MyTestCase.testFoo MyTestCase.testBaz
testFoo (__main__.MyTestCase) ... ok
testBaz (__main__.MyTestCase) ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.004s
OK
prompt>
                </programlisting>
            </listitem>
        </varlistentry>
    </variablelist>
</section>

<section>
    <title>More Options</title>
    <variablelist>
        <varlistentry>
            <term>Debugging Failing Tests</term>
            <listitem>
                <para>'--debug' command line option, if a test fails pdb will run on the failed assertion in post-mortem mode.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>Wait Between Tests</term>
            <listitem>
                <para>'--interval=INTERVAL' command line option, sleeps the given interval between tests.</para>
            </listitem>
        </varlistentry>

    </variablelist>
</section>

</webpage>
